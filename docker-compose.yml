version: '3.4'
services:
  orders:
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development
    command: npm run start:dev orders
    env_file:
      - ./apps/orders/.env
    depends_on:
      - mongo
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '8000:8000'
    networks:
      - order-app


  billings:
    build:
      context: .
      dockerfile: ./apps/billings/Dockerfile
      target: development
    command: npm run start:dev billings
    env_file:
      - ./apps/billings/.env
    depends_on:
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - order-app

  rabbitmq: 
    image: rabbitmq
    volumes:
    - rabbit:/var/lib/rabbitmq/
    ports:
      - '5672:5672'
    networks:
      - order-app

  mongo:
    container_name: mongo
    image: mongo
    volumes:
    - mongodb:/data/db
    command: mongod --port 27018

    ports:
    - '27018:27018'
    networks:
      - order-app

volumes:
  mongodb:
    driver: local
  rabbit:
    driver: local

networks:
  order-app:
    driver: bridge